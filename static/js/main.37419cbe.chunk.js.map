{"version":3,"sources":["store/redux/appSlice.ts","store/redux/todoSlice.ts","store/redux/index.ts","components/FormikValidation.tsx","hooks.ts","components/Header.tsx","store/context/FormContext.tsx","pages/MultistepForm/components/PrimaryButton.tsx","pages/MultistepForm/components/MainContainer.tsx","pages/MultistepForm/components/Form.tsx","pages/MultistepForm/components/Input.tsx","pages/MultistepForm/Step1.tsx","pages/MultistepForm/Step2.tsx","pages/MultistepForm/components/FileInput.tsx","pages/MultistepForm/Step3.tsx","pages/MultistepForm/Result.tsx","pages/MultistepForm/MultiStepForm.tsx","pages/Dashboard/components/SortingSearchPanel.tsx","pages/Dashboard/components/TodoCard.tsx","pages/Dashboard/Dashboard.tsx","components/Card.tsx","constants.ts","pages/Home/Home.tsx","routeGuard.tsx","App.tsx","index.tsx"],"names":["appSlice","createSlice","name","initialState","isAuthorized","reducers","setIsAuthorized","state","payload","actions","todoSlice","todos","addTodo","push","removeTodo","newTodos","filter","id","editTodo","map","todo","store","configureStore","reducer","app","useStyles","makeStyles","theme","container","position","boxContainer","width","textField","marginTop","spacing","validationSchema","yup","firstName","max","required","lastName","email","password","min","accepted","oneOf","FormikValidation","dispatch","useDispatch","history","useHistory","classes","formik","useFormik","initialValues","onSubmit","values","console","log","JSON","stringify","Container","className","maxWidth","Box","mt","Paper","elevation","handleSubmit","p","textAlign","Typography","variant","gutterBottom","Grid","item","xs","sm","TextField","label","margin","fullWidth","getFieldProps","error","touched","Boolean","errors","helperText","FormControl","component","FormControlLabel","control","Checkbox","FormHelperText","Button","color","type","useAppSelector","useSelector","link","textDecoration","button","logout","flexGrow","display","justifyContent","Header","AppBar","Toolbar","to","Divider","orientation","flexItem","onClick","DataContext","createContext","data","DataFromProvider","children","useState","setData","Provider","value","setValues","prevData","useData","useContext","root","PrimaryButton","props","styles","flexDirection","alignItems","childrenWrapper","MainContainer","Form","noValidate","Input","forwardRef","ref","inputRef","schema","shape","matches","Step1","useRouteMatch","url","useForm","mode","defaultValues","resolver","yupResolver","register","formState","message","Step2","hasPhone","phoneNumber","watch","defaultValue","render","field","defaultChecked","onChange","event","target","parsePhoneNumberFromString","formatInternational","normalizePhoneNumber","backgroundColor","cursor","padding","icon","fontSize","FileInput","onBlur","onDrop","getRootProps","getInputProps","List","f","index","ListItem","ListItemIcon","ListItemText","primary","secondary","size","Step3","files","marginBottom","table","palette","main","Result","entries","Object","entry","a","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","scope","toString","MultiStepForm","path","exact","SortingSearchPanel","searchWord","onChangeSearchWord","e","minWidth","title","TodoCard","text","completed","isEditMode","setIsEditMode","localTitle","setLocalTitle","localText","setLocalText","useEffect","Card","top","right","checked","CardContent","CardActions","prev","Dashboard","setSearchWord","localTodos","setLocalTodos","titleError","setTitleError","textError","setTextError","handleTextField","filteredTodos","includes","String","Date","now","height","media","backgroundSize","MediaCard","imageUrl","CardActionArea","CardMedia","image","FORMIK","REACT_HOOK_FROM","Home","first","second","isCardsShown","setIsCardsShown","setTimeout","md","Grow","in","timeout","RequireAuth","App","createTheme","ReactDOM","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.37419cbe.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst appSlice = createSlice({\r\n  name: 'app',\r\n  initialState: {\r\n    isAuthorized: false,\r\n  },\r\n  reducers: {\r\n    setIsAuthorized(state, { payload }) {\r\n      state.isAuthorized = payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setIsAuthorized } = appSlice.actions;\r\n\r\nexport default appSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { ITodo } from '../../types/types';\r\n\r\ninterface TodosState {\r\n  todos: Array<ITodo>;\r\n}\r\n\r\nconst initialState: TodosState = {\r\n  todos: [],\r\n}\r\n\r\nconst todoSlice = createSlice({\r\n  name: 'todos',\r\n  initialState,\r\n  reducers: {\r\n    addTodo(state, { payload }) {\r\n      state.todos.push(payload);\r\n    },\r\n    removeTodo(state, { payload }) {\r\n      const newTodos = state.todos.filter(\r\n        ({ id }) => id !== payload.id\r\n      );\r\n      state.todos = newTodos;\r\n    },\r\n    editTodo(state, { payload }) {\r\n      const newTodos = state.todos.map((todo) =>\r\n        todo.id === payload.id\r\n          ? { ...todo, ...payload }\r\n          : todo\r\n      );\r\n      state.todos = newTodos;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addTodo, removeTodo, editTodo } =\r\n  todoSlice.actions;\r\n\r\nexport default todoSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport appSlice from './appSlice';\r\nimport todoSlice from './todoSlice';\r\nconst store = configureStore({\r\n  reducer: { app: appSlice, todos: todoSlice },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState> \r\nexport type AppDispatch = typeof store.dispatch\r\nexport default store;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport {\r\n  Container,\r\n  Paper,\r\n  Box,\r\n  Typography,\r\n  TextField,\r\n  Grid,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Button,\r\n  FormControl,\r\n  FormHelperText,\r\n} from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setIsAuthorized } from '../store/redux/appSlice';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    position: 'relative',\r\n  },\r\n  boxContainer: {\r\n    width: '100%',\r\n  },\r\n  textField: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst validationSchema = yup.object({\r\n  firstName: yup\r\n    .string()\r\n    .max(12, 'Max 12 characters')\r\n    .required('FirstName is required'),\r\n  lastName: yup\r\n    .string()\r\n    .max(12, 'Max 12 characters')\r\n    .required('LastName is required'),\r\n  email: yup\r\n    .string()\r\n    .email('Enter a valid email')\r\n    .required('Email is required'),\r\n  password: yup\r\n    .string()\r\n    .min(\r\n      8,\r\n      'Password should be of minimum 8 characters length'\r\n    )\r\n    .required('Password is required'),\r\n  accepted: yup\r\n    .boolean()\r\n    .required('Required')\r\n    .oneOf([true], 'You must accept the terms'),\r\n});\r\n\r\nconst FormikValidation = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      password: '',\r\n      accepted: false,\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      console.log(JSON.stringify(values, null, 2));\r\n      dispatch(setIsAuthorized(true));\r\n      history.push('/dashboard');\r\n    },\r\n  });\r\n  return (\r\n    <Container className={classes.container} maxWidth='xs'>\r\n      <Box mt={4} className={classes.boxContainer}>\r\n        <Paper elevation={3}>\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <Box p={2}>\r\n              <Box textAlign='center'>\r\n                <Typography variant='h5' gutterBottom>\r\n                  Register Form\r\n                </Typography>\r\n              </Box>\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    //   className={classes.textField}\r\n                    id='outlined-basic'\r\n                    label='First name'\r\n                    variant='outlined'\r\n                    margin='dense'\r\n                    fullWidth\r\n                    {...formik.getFieldProps('firstName')}\r\n                    error={\r\n                      formik.touched.firstName &&\r\n                      Boolean(formik.errors.firstName)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.firstName &&\r\n                      formik.errors.firstName\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    //   className={classes.textField}\r\n                    id='outlined-basic'\r\n                    label='Last name'\r\n                    variant='outlined'\r\n                    margin='dense'\r\n                    fullWidth\r\n                    {...formik.getFieldProps('lastName')}\r\n                    error={\r\n                      formik.touched.lastName &&\r\n                      Boolean(formik.errors.lastName)\r\n                    }\r\n                    helperText={\r\n                      formik.touched.lastName &&\r\n                      formik.errors.lastName\r\n                    }\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <TextField\r\n                //   className={classes.textField}\r\n                id='outlined-basic'\r\n                label='Email'\r\n                variant='outlined'\r\n                margin='dense'\r\n                fullWidth\r\n                {...formik.getFieldProps('email')}\r\n                error={\r\n                  formik.touched.email &&\r\n                  Boolean(formik.errors.email)\r\n                }\r\n                helperText={\r\n                  formik.touched.email &&\r\n                  formik.errors.email\r\n                }\r\n              />\r\n              <TextField\r\n                //   className={classes.textField}\r\n                id='outlined-basic'\r\n                label='Password'\r\n                variant='outlined'\r\n                margin='dense'\r\n                fullWidth\r\n                {...formik.getFieldProps('password')}\r\n                error={\r\n                  formik.touched.password &&\r\n                  Boolean(formik.errors.password)\r\n                }\r\n                helperText={\r\n                  formik.touched.password &&\r\n                  formik.errors.password\r\n                }\r\n              />\r\n              <FormControl\r\n                required\r\n                error={\r\n                  formik.touched.accepted &&\r\n                  Boolean(formik.errors.accepted)\r\n                }\r\n                component='fieldset'\r\n              >\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      {...formik.getFieldProps('accepted')}\r\n                    />\r\n                  }\r\n                  label='I accept rules'\r\n                />\r\n                {formik.touched.accepted &&\r\n                  Boolean(formik.errors.accepted) && (\r\n                    <FormHelperText>\r\n                      {formik.errors.accepted}\r\n                    </FormHelperText>\r\n                  )}\r\n              </FormControl>\r\n              <Box mt={2}>\r\n                <Button\r\n                  variant='contained'\r\n                  color='primary'\r\n                  fullWidth\r\n                  type='submit'\r\n                >\r\n                  Register\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n          </form>\r\n        </Paper>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormikValidation;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport type { RootState, AppDispatch } from './store/redux'\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import React from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { setIsAuthorized } from '../store/redux/appSlice';\r\nimport { Box, Divider } from '@material-ui/core';\r\nimport { useAppSelector } from '../hooks';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  link: {\r\n    color: 'white',\r\n    textDecoration: 'none',\r\n  },\r\n  button: {\r\n    color: 'white',\r\n  },\r\n  logout: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n}));\r\n\r\nexport default function Header() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const isAuthorized = useAppSelector(\r\n    (state) => state.app.isAuthorized\r\n  );\r\n  const logout = () => {\r\n    dispatch(setIsAuthorized(false));\r\n    history.push('/');\r\n  };\r\n  return (\r\n    <div>\r\n      <AppBar position='static'>\r\n        <Toolbar>\r\n          <Link className={classes.link} to='/'>\r\n            <Button className={classes.button}>Home</Button>\r\n          </Link>\r\n          <Link className={classes.link} to='/multistep'>\r\n            <Button className={classes.button}>\r\n              MULTISTEP\r\n            </Button>\r\n          </Link>\r\n          <Link className={classes.link} to='/formik'>\r\n            <Button className={classes.button}>\r\n              Formik\r\n            </Button>\r\n          </Link>\r\n          {isAuthorized && (\r\n            <Box className={classes.logout}>\r\n              <Link className={classes.link} to='/dashboard'>\r\n                <Button className={classes.button}>\r\n                  Dashboard\r\n                </Button>\r\n              </Link>\r\n              <Divider orientation='vertical' flexItem />\r\n              <Button\r\n                onClick={logout}\r\n                className={classes.button}\r\n              >\r\n                LOGOUT\r\n              </Button>\r\n            </Box>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React, {\r\n  createContext,\r\n  useState,\r\n  useContext,\r\n  FC,\r\n} from 'react';\r\nimport { IFile } from '../../types/types';\r\n\r\ninterface DataInterface {\r\n  firstName?: string;\r\n  lastName?: string;\r\n  email?: string;\r\n  hasPhone?: boolean;\r\n  files?: Array<IFile> | [];\r\n  phoneNumber?: string;\r\n}\r\n\r\ninterface DataContextInterface {\r\n  data: DataInterface;\r\n  setValues?: (values: DataInterface) => void;\r\n}\r\n\r\nconst DataContext = createContext<DataContextInterface>({\r\n  data: {},\r\n});\r\n\r\nexport const DataFromProvider: FC = ({ children }) => {\r\n  const [data, setData] = useState({});\r\n\r\n  const setValues = (values: DataInterface) => {\r\n    setData((prevData) => ({\r\n      ...prevData,\r\n      ...values,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <DataContext.Provider value={{ data, setValues }}>\r\n      {children}\r\n    </DataContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useData = () => useContext(DataContext);\r\n","import React, {FC} from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\ninterface PrimaryButtonProps{\r\n  onClick?: ()=> void\r\n}\r\n\r\nexport const PrimaryButton: FC<PrimaryButtonProps> = ({ children, ...props }) => {\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <Button\r\n      type=\"submit\"\r\n      fullWidth\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      className={styles.root}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  childrenWrapper: {\r\n    width: '100%'\r\n  }\r\n}));\r\n\r\nexport const MainContainer: FC = ({\r\n  children,\r\n  ...props\r\n}) => {\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <Container\r\n      className={styles.root}\r\n      component='main'\r\n      maxWidth='sm'\r\n      {...props}\r\n    >\r\n      <div  className={styles.childrenWrapper}>{children}</div>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\ninterface FormProps {\r\n  onSubmit: () => void;\r\n}\r\n\r\nexport const Form: FC<FormProps> = ({\r\n  children,\r\n  ...props\r\n}) => {\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <form {...props} className={styles.root} noValidate>\r\n      {children}\r\n    </form>\r\n  );\r\n};\r\n","import React, { forwardRef, FC } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\ninterface InputProps {\r\n  [index: string]: any\r\n}\r\n\r\nexport const Input = forwardRef<\r\n  HTMLInputElement,\r\n  InputProps\r\n>((props, ref) => {\r\n  return (\r\n    <TextField\r\n      variant='outlined'\r\n      margin='normal'\r\n      inputRef={ref}\r\n      fullWidth\r\n      {...props}\r\n    />\r\n  );\r\n});\r\n","import React from 'react';\r\nimport {\r\n  useHistory,\r\n  useRouteMatch,\r\n} from 'react-router-dom';\r\nimport { useData } from '../../store/context/FormContext';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { PrimaryButton } from './components/PrimaryButton';\r\nimport { MainContainer } from './components/MainContainer';\r\nimport { Form } from './components/Form';\r\nimport { Input } from './components/Input';\r\nimport * as yup from 'yup';\r\nimport { IFormData } from '../../types/types';\r\n\r\nconst schema = yup.object().shape({\r\n  firstName: yup\r\n    .string()\r\n    .matches(\r\n      /^([^0-9]*)$/,\r\n      'First name should not contain numbers'\r\n    )\r\n    .required('First name is a required field'),\r\n  lastName: yup\r\n    .string()\r\n    .matches(\r\n      /^([^0-9]*)$/,\r\n      'Last name should not contain numbers'\r\n    )\r\n    .required('Last name is a required field'),\r\n});\r\n\r\ninterface Inputs {\r\n  firstName: string;\r\n  lastName: string;\r\n}\r\nexport const Step1 = () => {\r\n  const { setValues, data } = useData();\r\n  let { url } = useRouteMatch();\r\n  const history = useHistory();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<Inputs>({\r\n    mode: 'onBlur',\r\n    defaultValues: {\r\n      firstName: data.firstName ? data.firstName : '',\r\n      lastName: data.lastName ? data.lastName : '',\r\n    },\r\n    // @ts-ignore\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const onSubmit = (data: IFormData) => {\r\n    history.push(`/multistep/step2`);\r\n\r\n    // @ts-ignore\r\n    setValues(data);\r\n  };\r\n\r\n  return (\r\n    <MainContainer>\r\n      <Typography component='h2' variant='h5'>\r\n        Step 1\r\n      </Typography>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Input\r\n          {...register('firstName')} \r\n          type='text'\r\n          label='First Name'\r\n          error={!!errors.firstName}\r\n          helperText={errors?.firstName?.message}\r\n        />\r\n        <Input\r\n          {...register('lastName')} \r\n          type='text'\r\n          label='Last Name'\r\n          error={!!errors.lastName}\r\n          helperText={errors?.lastName?.message}\r\n        />\r\n        <PrimaryButton>Next</PrimaryButton>\r\n      </Form>\r\n    </MainContainer>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport {\r\n  useHistory,\r\n  useRouteMatch,\r\n} from 'react-router-dom';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useData } from '../../store/context/FormContext';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { PrimaryButton } from './components/PrimaryButton';\r\nimport { MainContainer } from './components/MainContainer';\r\nimport { Form } from './components/Form';\r\nimport { Input } from './components/Input';\r\nimport * as yup from 'yup';\r\nimport { parsePhoneNumberFromString } from 'libphonenumber-js';\r\nimport { IFormData } from '../../types/types';\r\n\r\nconst schema = yup.object().shape({\r\n  email: yup\r\n    .string()\r\n    .email('Email should have correct format')\r\n    .required('Email is a required field'),\r\n});\r\n\r\nconst normalizePhoneNumber = (value: string) => {\r\n  const phoneNumber = parsePhoneNumberFromString(value);\r\n  if (!phoneNumber) {\r\n    return value;\r\n  }\r\n\r\n  return phoneNumber.formatInternational();\r\n};\r\n\r\ninterface Inputs {\r\n  email: string;\r\n  phoneNumber: string;\r\n  hasPhone: boolean;\r\n}\r\n\r\nexport const Step2 = () => {\r\n  let { url } = useRouteMatch();\r\n  const { setValues, data } = useData();\r\n  const history = useHistory();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    watch,\r\n    formState: { errors },\r\n    control,\r\n  } = useForm<Inputs>({\r\n    mode: 'onBlur',\r\n    defaultValues: {\r\n      email: data.email,\r\n      hasPhone: data.hasPhone,\r\n      phoneNumber: data.phoneNumber,\r\n    },\r\n    // @ts-ignore\r\n    resolver: yupResolver(schema),\r\n  });\r\n  const hasPhone = watch('hasPhone');\r\n\r\n  const onSubmit = (data: IFormData) => {\r\n    history.push(`/multistep/step3`);\r\n    // @ts-ignore\r\n    setValues(data);\r\n  };\r\n\r\n  return (\r\n    <MainContainer>\r\n      <Typography component='h2' variant='h5'>\r\n        Step 2\r\n      </Typography>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Input\r\n          {...register('email')}\r\n          id='email'\r\n          type='email'\r\n          label='Email'\r\n          error={!!errors.email}\r\n          helperText={errors?.email?.message}\r\n          required\r\n        />\r\n        <Controller\r\n          name='hasPhone'\r\n          control={control}\r\n          defaultValue={data.hasPhone}\r\n          render={({ field }) => (\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  // defaultValue={data.hasPhone}\r\n                  defaultChecked={data.hasPhone}\r\n                  color='primary'\r\n                  {...field}\r\n                  name='hasPhone'\r\n                />\r\n              }\r\n              label='Do you have a phone'\r\n            />\r\n          )}\r\n        />\r\n\r\n        {hasPhone && (\r\n          <Input\r\n            {...register('phoneNumber')}\r\n            id='phoneNumber'\r\n            type='tel'\r\n            label='Phone Number'\r\n            onChange={(\r\n              event: React.ChangeEvent<HTMLInputElement>\r\n            ) => {\r\n              event.target.value = normalizePhoneNumber(\r\n                event.target.value\r\n              );\r\n            }}\r\n          />\r\n        )}\r\n        <PrimaryButton>Next</PrimaryButton>\r\n      </Form>\r\n    </MainContainer>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport { Controller, Control } from 'react-hook-form';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CloudUpload from '@material-ui/icons/CloudUpload';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InsertDriveFile from '@material-ui/icons/InsertDriveFile';\r\nimport { IFormData } from '../../../types/types';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: '#eee',\r\n    textAlign: 'center',\r\n    cursor: 'pointer',\r\n    color: '#333',\r\n    padding: '10px',\r\n    marginTop: '20px',\r\n  },\r\n  icon: {\r\n    marginTop: '16px',\r\n    color: '#888888',\r\n    fontSize: '42px',\r\n  },\r\n}));\r\n\r\ninterface FileInputProps {\r\n  control: Control<IFormData>,\r\n  name: 'files'\r\n}\r\n\r\nexport const FileInput = ({ control, name } : FileInputProps) => {\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <Controller\r\n      control={control}\r\n      name={name}\r\n      defaultValue={[] as any}\r\n      render={({ field: { onChange, onBlur, value } }) => (\r\n        <>\r\n          <Dropzone onDrop={onChange}>\r\n            {({ getRootProps, getInputProps }) => (\r\n              <Paper\r\n                variant='outlined'\r\n                className={styles.root}\r\n                {...getRootProps()}\r\n              >\r\n                <CloudUpload className={styles.icon} />\r\n                <input\r\n                  {...getInputProps()}\r\n                  name={name}\r\n                  onBlur={onBlur}\r\n                />\r\n                <p>\r\n                  Drag 'n' drop files here, or click to\r\n                  select files\r\n                </p>\r\n              </Paper>\r\n            )}\r\n          </Dropzone>\r\n          <List>\r\n            {value.map((f, index) => (\r\n              <ListItem key={index}>\r\n                <ListItemIcon>\r\n                  <InsertDriveFile />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary={f.name}\r\n                  secondary={f.size}\r\n                />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </>\r\n      )}\r\n    />\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useData } from '../../store/context/FormContext';\r\nimport { MainContainer } from './components/MainContainer';\r\nimport { FileInput } from './components/FileInput';\r\nimport { PrimaryButton } from './components/PrimaryButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Form } from './components/Form';\r\nimport { IFormData } from '../../types/types';\r\n\r\nexport const Step3 = () => {\r\n  const history = useHistory();\r\n  const { data, setValues } = useData();\r\n  const { control, handleSubmit } = useForm<IFormData>({\r\n    defaultValues: {\r\n      files: data.files,\r\n    },\r\n  });\r\n\r\n  const onSubmit = (data: IFormData) => {\r\n    history.push('/multistep/result');\r\n    // @ts-ignore\r\n    setValues(data);\r\n  };\r\n\r\n  return (\r\n    <MainContainer>\r\n      <Typography component='h2' variant='h5'>\r\n        Step 3\r\n      </Typography>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <FileInput name='files' control={control} />\r\n        <PrimaryButton>Next</PrimaryButton>\r\n      </Form>\r\n    </MainContainer>\r\n  );\r\n};\r\n","import React, { useState, FC } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { useData } from '../../store/context/FormContext';\r\nimport { MainContainer } from './components/MainContainer';\r\nimport { PrimaryButton } from './components/PrimaryButton';\r\nimport InsertDriveFile from '@material-ui/icons/InsertDriveFile';\r\nimport {\r\n  ListItemText,\r\n  ListItemIcon,\r\n  ListItem,\r\n  List,\r\n  Typography,\r\n  Paper,\r\n  TableRow,\r\n  TableHead,\r\n  TableContainer,\r\n  TableCell,\r\n  Table,\r\n  TableBody,\r\n} from '@material-ui/core';\r\nimport { setIsAuthorized } from '../../store/redux/appSlice';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n  root: {\r\n    marginBottom: '30px',\r\n  },\r\n  table: {\r\n    marginBottom: '30px',\r\n  },\r\n  link:{\r\n    color: theme.palette.secondary.main,\r\n    textDecoration: 'none',\r\n    width: '100%'\r\n  }\r\n}));\r\n\r\nexport const Result = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const styles = useStyles();\r\n  const { data } = useData();\r\n\r\n  const entries = Object.entries(data).filter(\r\n    (entry) => entry[0] !== 'files'\r\n  );\r\n  const { files } = data;\r\n\r\n  const onSubmit = async () => {\r\n    // const formData = new FormData();\r\n    // if (data.files) {\r\n    //   data.files.forEach((file) => {\r\n    //     formData.append(\"files\", file, file.name);\r\n    //   });\r\n    // }\r\n\r\n    // entries.forEach((entry) => {\r\n    //   formData.append(entry[0], entry[1]);\r\n    // });\r\n\r\n    // const res = await fetch(\"http://localhost:4000/\", {\r\n    //   method: \"POST\",\r\n    //   body: formData,\r\n    // });\r\n    dispatch(setIsAuthorized(true));\r\n    history.push('/dashboard');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MainContainer>\r\n        <Typography component='h2' variant='h5'>\r\n          Form Values\r\n        </Typography>\r\n        <TableContainer\r\n          className={styles.root}\r\n          component={Paper}\r\n        >\r\n          <Table\r\n            className={styles.table}\r\n            aria-label='simple table'\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Field</TableCell>\r\n                <TableCell align='right'>Value</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {entries.map((entry) => (\r\n                <TableRow key={entry[0]}>\r\n                  <TableCell component='th' scope='row'>\r\n                    <div>{entry[0]}</div>\r\n                  </TableCell>\r\n                  <TableCell align='right'>\r\n                    <div>{entry[1]?.toString()}</div>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        {files && (\r\n          <>\r\n            <Typography component='h2' variant='h5'>\r\n              Files\r\n            </Typography>\r\n            <List>\r\n              {files.map((f, index) => (\r\n                <ListItem key={index}>\r\n                  <ListItemIcon>\r\n                    <InsertDriveFile />\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary={f.name}\r\n                    secondary={f.size}\r\n                  />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </>\r\n        )}\r\n        <PrimaryButton onClick={onSubmit}>\r\n          Submit\r\n        </PrimaryButton>\r\n        <Button fullWidth>\r\n          <Link  className={styles.link} to='/multistep'>Start over</Link>\r\n        </Button>\r\n      </MainContainer>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  useRouteMatch,\r\n} from 'react-router-dom';\r\nimport { DataFromProvider } from '../../store/context/FormContext';\r\nimport { Step1 } from './Step1';\r\nimport { Step2 } from './Step2';\r\nimport { Step3 } from './Step3';\r\nimport { Result } from './Result';\r\n\r\nconst MultiStepForm = () => {\r\n  let { path, url } = useRouteMatch();\r\n  console.log(path);\r\n  return (\r\n    <DataFromProvider>\r\n      <Switch>\r\n        <Route exact path={path} component={Step1} />\r\n        <Route\r\n          exact\r\n          path={`${path}/step2`}\r\n          component={Step2}\r\n        />\r\n        <Route\r\n          exact\r\n          path={`${path}/step3`}\r\n          component={Step3}\r\n        />\r\n        <Route\r\n          exact\r\n          path={`${path}/result`}\r\n          component={Result}\r\n        />\r\n      </Switch>\r\n    </DataFromProvider>\r\n  );\r\n};\r\n\r\nexport default MultiStepForm;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box, TextField } from '@material-ui/core';\r\n\r\ninterface SortingSearchPanelProps {\r\n  searchWord: string;\r\n  onChangeSearchWord: (value: string) => void;\r\n}\r\n\r\nconst SortingSearchPanel = ({\r\n  searchWord,\r\n  onChangeSearchWord,\r\n}: SortingSearchPanelProps) => {\r\n  return (\r\n    <Box>\r\n      <TextField\r\n        label='Search'\r\n        fullWidth\r\n        value={searchWord}\r\n        onChange={(e) => onChangeSearchWord(e.target.value)}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SortingSearchPanel;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Card,\r\n  Checkbox,\r\n  Box,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {\r\n  editTodo,\r\n  removeTodo,\r\n} from '../../../store/redux/todoSlice';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    position: 'relative',\r\n    minWidth: 275,\r\n    marginBottom: 16,\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n  },\r\n});\r\n\r\ninterface TodoCardProps {\r\n  id: string;\r\n  title: string;\r\n  text: string;\r\n  completed: boolean;\r\n}\r\n\r\nconst TodoCard = ({\r\n  id,\r\n  title,\r\n  text,\r\n  completed,\r\n}: TodoCardProps) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n  const [localTitle, setLocalTitle] = useState<\r\n    null | string\r\n  >(null);\r\n  const [localText, setLocalText] = useState<null | string>(\r\n    null\r\n  );\r\n  const handleCheckTodo = () => {\r\n    dispatch(editTodo({ id, completed: !completed }));\r\n  };\r\n  const handleDeleteTodo = () => {\r\n    dispatch(removeTodo({ id }));\r\n  };\r\n  const handleEdit = () => {\r\n    if (isEditMode) {\r\n      dispatch(\r\n        editTodo({ id, title: localTitle, text: localText })\r\n      );\r\n    }\r\n    setIsEditMode((prev) => !prev);\r\n  };\r\n  useEffect(() => {\r\n    setLocalTitle(title);\r\n    setLocalText(text);\r\n  }, [title, text]);\r\n  return (\r\n    <Card className={classes.root}>\r\n      <Box position='absolute' top={7} right={7}>\r\n        <Checkbox\r\n          defaultChecked\r\n          color='primary'\r\n          checked={completed}\r\n          onChange={handleCheckTodo}\r\n        />\r\n      </Box>\r\n      <CardContent>\r\n        <Typography className={classes.title} gutterBottom>\r\n          {isEditMode ? (\r\n            <TextField\r\n              value={localTitle}\r\n              onChange={(e) =>\r\n                setLocalTitle(e.target.value)\r\n              }\r\n            />\r\n          ) : (\r\n            localTitle\r\n          )}\r\n        </Typography>\r\n\r\n        <Typography\r\n          variant='body2'\r\n          color='textSecondary'\r\n          component='p'\r\n        >\r\n          {isEditMode ? (\r\n            <TextField\r\n              value={localText}\r\n              onChange={(e) => setLocalText(e.target.value)}\r\n            />\r\n          ) : (\r\n            localText\r\n          )}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button onClick={handleEdit} size='small'>\r\n          {isEditMode ? 'Save' : 'Edit'}\r\n        </Button>\r\n        <Button size='small' onClick={handleDeleteTodo}>\r\n          Delete\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TodoCard;\r\n","import {\r\n  Paper,\r\n  Box,\r\n  TextField,\r\n  Button,\r\n  makeStyles,\r\n  Container,\r\n} from '@material-ui/core';\r\nimport { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport SortingSearchPanel from './components/SortingSearchPanel';\r\nimport TodoCard from './components/TodoCard';\r\nimport { addTodo } from '../../store/redux/todoSlice';\r\nimport { useAppSelector } from '../../hooks';\r\nimport { ITodo } from '../../types/types';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nconst Dashboard = () => {\r\n  const dispatch = useDispatch();\r\n  const todos = useAppSelector(\r\n    (state) => state.todos.todos\r\n  );\r\n\r\n  const [searchWord, setSearchWord] = useState<string>('');\r\n  const [localTodos, setLocalTodos] = useState<\r\n    Array<ITodo> | []\r\n  >([]);\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    title: '',\r\n    text: '',\r\n  });\r\n  const [titleError, setTitleError] = useState<\r\n    string | null\r\n  >(null);\r\n  const [textError, setTextError] = useState<string | null>(\r\n    null\r\n  );\r\n\r\n  const handleTextField = (\r\n    e: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    if (titleError) setTitleError(null);\r\n    if (textError) setTextError(null);\r\n    const {\r\n      target: { value, name },\r\n    } = e;\r\n    setValues((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (!values.title || !values.text) {\r\n      !values.title &&\r\n        setTitleError('Поле не должно быть пустым');\r\n      !values.text &&\r\n        setTextError('Поле не должно быть пустым');\r\n      return;\r\n    }\r\n    const todo = {\r\n      id: String(Date.now()),\r\n      title: values.title,\r\n      text: values.text,\r\n      completed: false,\r\n    };\r\n    dispatch(addTodo(todo));\r\n  };\r\n  useEffect(() => {\r\n    const filteredTodos = todos.filter(\r\n      (todo) =>\r\n        todo.title.includes(searchWord) ||\r\n        todo.text.includes(searchWord)\r\n    );\r\n    setLocalTodos(filteredTodos);\r\n  }, [todos, searchWord]);\r\n  return (\r\n    <Container maxWidth='sm'>\r\n      <Box className={classes.root} mt={4}>\r\n        <TextField\r\n          label='Todo title'\r\n          name='title'\r\n          variant='outlined'\r\n          value={values.title}\r\n          onChange={handleTextField}\r\n          fullWidth\r\n          error={Boolean(titleError)}\r\n          helperText={titleError}\r\n        />\r\n        <TextField\r\n          label='Todo text'\r\n          name='text'\r\n          variant='outlined'\r\n          value={values.text}\r\n          onChange={handleTextField}\r\n          fullWidth\r\n          error={Boolean(textError)}\r\n          helperText={textError}\r\n        />\r\n\r\n        <Box mt={1}>\r\n          <Button\r\n            variant='contained'\r\n            color='secondary'\r\n            fullWidth\r\n            onClick={handleSubmit}\r\n          >\r\n            Enter\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n      <Box mt={1}>\r\n        <SortingSearchPanel\r\n          searchWord={searchWord}\r\n          onChangeSearchWord={setSearchWord}\r\n        />\r\n        <Box mt={3}>\r\n          {localTodos.map((todo) => (\r\n            <TodoCard key={todo.id} {...todo} />\r\n          ))}\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import { FC } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    textDecoration: 'none',\r\n    height: '100%',\r\n    '& .MuiCardActionArea-root': {\r\n      height: '100%',\r\n    },\r\n  },\r\n  media: {\r\n    height: 140,\r\n    backgroundSize: 'contain',\r\n  },\r\n});\r\n\r\ninterface CardProps {\r\n  imageUrl: string;\r\n  title: string;\r\n  text: string;\r\n}\r\n\r\nexport default function MediaCard({\r\n  imageUrl,\r\n  title,\r\n  text,\r\n}: CardProps) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={imageUrl}\r\n          title='Contemplative Reptile'\r\n        />\r\n        <CardContent>\r\n          <Typography\r\n            gutterBottom\r\n            variant='h5'\r\n            component='h2'\r\n          >\r\n            {title}\r\n          </Typography>\r\n          <Typography\r\n            variant='body2'\r\n            color='textSecondary'\r\n            component='p'\r\n          >\r\n            {text}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n}\r\n","export const FORMIK = {\r\n  IMAGE:\r\n    'https://user-images.githubusercontent.com/4060187/61057426-4e5a4600-a3c3-11e9-9114-630743e05814.png',\r\n  TEXT: \"Formik is the world's most popular open source form library for React and React Native. \",\r\n};\r\n\r\nexport const REACT_HOOK_FROM = {\r\n  IMAGE:\r\n    'https://reactjsexample.com/content/images/2019/04/react-hook-form.jpg',\r\n  TEXT: 'React-hook-form is a library that helps you validate forms in React. React-hook-form is a minimal library without any other dependencies. It is performant and straightforward to use, requiring developers to write fewer lines of code than other form libraries',\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  makeStyles,\r\n  Grow,\r\n} from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport Card from '../../components/Card';\r\nimport { FORMIK, REACT_HOOK_FROM } from '../../constants';\r\n\r\nconst useStyles = makeStyles({\r\n  link: {\r\n    textDecoration: 'none',\r\n  },\r\n});\r\nconst Home = () => {\r\n  const [isCardsShown, setIsCardsShown] = useState({\r\n    first: false,\r\n    second: false,\r\n  });\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setIsCardsShown((prev) => ({ ...prev, first: true }));\r\n    }, 500);\r\n    setTimeout(() => {\r\n      setIsCardsShown((prev) => ({\r\n        ...prev,\r\n        second: true,\r\n      }));\r\n    }, 900);\r\n  }, []);\r\n  return (\r\n    <Box mt={4}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <Link className={classes.link} to='/formik'>\r\n            <Grow in={isCardsShown.first} timeout={1000}>\r\n              <Box height='100%'>\r\n                <Card\r\n                  imageUrl={FORMIK.IMAGE}\r\n                  title='Formik'\r\n                  text={FORMIK.TEXT}\r\n                />\r\n              </Box>\r\n            </Grow>\r\n          </Link>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Link className={classes.link} to='/multistep'>\r\n            <Grow in={isCardsShown.second} timeout={1000}>\r\n              <Box height='100%'>\r\n                <Card\r\n                  imageUrl={REACT_HOOK_FROM.IMAGE}\r\n                  title='React Hook Form'\r\n                  text={REACT_HOOK_FROM.TEXT}\r\n                />\r\n              </Box>\r\n            </Grow>\r\n          </Link>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { FC } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useAppSelector } from './hooks';\r\n\r\nconst RequireAuth: FC = ({ children }) => {\r\n  const isAuthorized = useAppSelector(\r\n    (state) => state.app.isAuthorized\r\n  );\r\n  if (!isAuthorized) {\r\n    return <Redirect to='/' />;\r\n  }\r\n\r\n  return <div>{children}</div>;\r\n};\r\nexport default RequireAuth;\r\n","import { useState, useEffect } from 'react';\r\nimport {\r\n  HashRouter  as Router,\r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom';\r\nimport {\r\n  createTheme,\r\n  makeStyles,\r\n  ThemeProvider,\r\n} from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport FormikValidation from './components/FormikValidation';\r\nimport ReactHookForm from './components/ReactHookForm';\r\nimport Header from './components/Header';\r\nimport MultiStepForm from './pages/MultistepForm/MultiStepForm';\r\nimport Dashboard from './pages/Dashboard/Dashboard';\r\nimport Home from './pages/Home/Home';\r\nimport RequireAuth from './routeGuard';\r\n\r\n\r\n\r\nfunction App() {\r\n  \r\n  return (\r\n    <div className='App'>\r\n      <Router>\r\n        <Header />\r\n        <Container maxWidth='md'>\r\n          <Switch>\r\n            <Route exact path='/' component={Home} />\r\n            <Route\r\n              path='/multistep'\r\n              component={MultiStepForm}\r\n            />\r\n            <Route\r\n              path='/formik'\r\n              component={FormikValidation}\r\n            />\r\n            <RequireAuth>\r\n              <Route\r\n                path='/dashboard'\r\n                component={Dashboard}\r\n              />\r\n            </RequireAuth>\r\n          </Switch>\r\n        </Container>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css'\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport {\r\n  createTheme,\r\n  ThemeProvider,\r\n} from '@material-ui/core/styles';\r\nimport store from './store/redux'\r\nimport App from './App';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#e64926',\r\n    },\r\n    secondary: {\r\n      main: '#F9A82E',\r\n    },\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <App />\r\n    </ThemeProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}